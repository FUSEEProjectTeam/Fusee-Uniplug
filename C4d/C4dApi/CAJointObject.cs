/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 0.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace C4d {

using System;
using System.Runtime.InteropServices;

public class CAJointObject : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CAJointObject(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CAJointObject obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public static CAJointObject Alloc() {
    IntPtr cPtr = C4dApiPINVOKE.CAJointObject_Alloc();
    CAJointObject ret = (cPtr == IntPtr.Zero) ? null : new CAJointObject(cPtr, false);
    return ret;
  }

  public static void Free(SWIGTYPE_p_p_CAJointObject pObject) {
    C4dApiPINVOKE.CAJointObject_Free(SWIGTYPE_p_p_CAJointObject.getCPtr(pObject));
    if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void GetBone(ref Fusee.Math.Core.Matrix4D /* Matrix*&_cstype */ m, SWIGTYPE_p_Real len) {
    double[] adbl_m;
    unsafe {adbl_m = Fusee.Math.ArrayConversion.Convert.Matrix4DToArrayDoubleC4DLayout(m);    fixed (double *pdbl_m = adbl_m) {
    /* Matrix*&_csin_pre */
    try {
      C4dApiPINVOKE.CAJointObject_GetBone(swigCPtr, (IntPtr) pdbl_m /* Matrix*&_csin */, SWIGTYPE_p_Real.getCPtr(len));
      if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
    } finally {
        m = Fusee.Math.ArrayConversion.Convert.ArrayDoubleC4DLayoutToMatrix4D(pdbl_m);
        /* Matrix*&_csin_post */
    }
} } /* Matrix*&_csin_terminator */
  }

  public CAWeightTag GetWeightTag(SWIGTYPE_p_LONG index) {
    IntPtr cPtr = C4dApiPINVOKE.CAJointObject_GetWeightTag(swigCPtr, SWIGTYPE_p_LONG.getCPtr(index));
    CAWeightTag ret = (cPtr == IntPtr.Zero) ? null : new CAWeightTag(cPtr, false);
    if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}
