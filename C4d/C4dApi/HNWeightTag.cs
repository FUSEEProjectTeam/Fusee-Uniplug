/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 0.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace C4d {

using System;
using System.Runtime.InteropServices;

public class HNWeightTag : BaseTag {
  private HandleRef swigCPtr;

  internal HNWeightTag(IntPtr cPtr, bool cMemoryOwn) : base(C4dApiPINVOKE.HNWeightTag_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(HNWeightTag obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          throw new MethodAccessException("C++ destructor does not have public access");
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public bool GetTagData(HNData data) {
    bool ret = C4dApiPINVOKE.HNWeightTag_GetTagData(swigCPtr, HNData.getCPtr(data));
    return ret;
  }

  public static HNWeightTag Alloc() {
    IntPtr cPtr = C4dApiPINVOKE.HNWeightTag_Alloc();
    HNWeightTag ret = (cPtr == IntPtr.Zero) ? null : new HNWeightTag(cPtr, false);
    return ret;
  }

  public static void Free(SWIGTYPE_p_p_HNWeightTag bl) {
    C4dApiPINVOKE.HNWeightTag_Free(SWIGTYPE_p_p_HNWeightTag.getCPtr(bl));
    if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
