/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 0.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace C4d {

using System;
using System.Runtime.InteropServices;

public class CPolygon : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal CPolygon(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CPolygon obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CPolygon() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          C4dApiPINVOKE.delete_CPolygon(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public int a {
    set {
      C4dApiPINVOKE.CPolygon_a_set(swigCPtr, value);
    } 
    get {
      int ret = C4dApiPINVOKE.CPolygon_a_get(swigCPtr);
      return ret;
    } 
  }

  public int b {
    set {
      C4dApiPINVOKE.CPolygon_b_set(swigCPtr, value);
    } 
    get {
      int ret = C4dApiPINVOKE.CPolygon_b_get(swigCPtr);
      return ret;
    } 
  }

  public int c {
    set {
      C4dApiPINVOKE.CPolygon_c_set(swigCPtr, value);
    } 
    get {
      int ret = C4dApiPINVOKE.CPolygon_c_get(swigCPtr);
      return ret;
    } 
  }

  public int d {
    set {
      C4dApiPINVOKE.CPolygon_d_set(swigCPtr, value);
    } 
    get {
      int ret = C4dApiPINVOKE.CPolygon_d_get(swigCPtr);
      return ret;
    } 
  }

  public CPolygon() : this(C4dApiPINVOKE.new_CPolygon__SWIG_0(), true) {
  }

  public CPolygon(int t_a, int t_b, int t_c) : this(C4dApiPINVOKE.new_CPolygon__SWIG_1(t_a, t_b, t_c), true) {
  }

  public CPolygon(int t_a, int t_b, int t_c, int t_d) : this(C4dApiPINVOKE.new_CPolygon__SWIG_2(t_a, t_b, t_c, t_d), true) {
  }

  public bool IsTriangle() {
    bool ret = C4dApiPINVOKE.CPolygon_IsTriangle(swigCPtr);
    return ret;
  }

  public int Find(int index) {
    int ret = C4dApiPINVOKE.CPolygon_Find(swigCPtr, index);
    return ret;
  }

  public int FindEdge(int index1, int index2) {
    int ret = C4dApiPINVOKE.CPolygon_FindEdge(swigCPtr, index1, index2);
    return ret;
  }

}

}
