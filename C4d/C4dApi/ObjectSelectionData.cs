/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 0.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace C4d {

using System;
using System.Runtime.InteropServices;

public class ObjectSelectionData : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ObjectSelectionData(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ObjectSelectionData obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ObjectSelectionData() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          C4dApiPINVOKE.delete_ObjectSelectionData(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public ObjectSelectionData() : this(C4dApiPINVOKE.new_ObjectSelectionData(), true) {
  }

  public BaseDocument doc {
    set {
      C4dApiPINVOKE.ObjectSelectionData_doc_set(swigCPtr, BaseDocument.getCPtr(value));
    } 
    get {
      IntPtr cPtr = C4dApiPINVOKE.ObjectSelectionData_doc_get(swigCPtr);
      BaseDocument ret = (cPtr == IntPtr.Zero) ? null : new BaseDocument(cPtr, false);
      return ret;
    } 
  }

  public InclusionTable table {
    set {
      C4dApiPINVOKE.ObjectSelectionData_table_set(swigCPtr, InclusionTable.getCPtr(value));
    } 
    get {
      IntPtr cPtr = C4dApiPINVOKE.ObjectSelectionData_table_get(swigCPtr);
      InclusionTable ret = (cPtr == IntPtr.Zero) ? null : new InclusionTable(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_ULONG flags {
    set {
      C4dApiPINVOKE.ObjectSelectionData_flags_set(swigCPtr, SWIGTYPE_p_ULONG.getCPtr(value));
      if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_ULONG ret = new SWIGTYPE_p_ULONG(C4dApiPINVOKE.ObjectSelectionData_flags_get(swigCPtr), true);
      if (C4dApiPINVOKE.SWIGPendingException.Pending) throw C4dApiPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}

}
