/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 0.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

namespace C4d {

using System;
using System.Runtime.InteropServices;

public class HandleInfo : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal HandleInfo(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(HandleInfo obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~HandleInfo() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          C4dApiPINVOKE.delete_HandleInfo(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public HandleInfo() : this(C4dApiPINVOKE.new_HandleInfo(), true) {
  }

  public Fusee.Math.Core.Vector3D /* Vector_cstype_out */ position {
    /* <Vector_csvarin> */
    set 
	{
      C4dApiPINVOKE.HandleInfo_position_set(swigCPtr, value /* Vector_csin */);
    }  /* </Vector_csvarin> */   
   /* <Vector_csvarout> */
   get
   {  
      Fusee.Math.Core.Vector3D ret = C4dApiPINVOKE.HandleInfo_position_get(swigCPtr);
      return ret;
   } /* <Vector_csvarout> */ 
  }

  public Fusee.Math.Core.Vector3D /* Vector_cstype_out */ direction {
    /* <Vector_csvarin> */
    set 
	{
      C4dApiPINVOKE.HandleInfo_direction_set(swigCPtr, value /* Vector_csin */);
    }  /* </Vector_csvarin> */   
   /* <Vector_csvarout> */
   get
   {  
      Fusee.Math.Core.Vector3D ret = C4dApiPINVOKE.HandleInfo_direction_get(swigCPtr);
      return ret;
   } /* <Vector_csvarout> */ 
  }

  public Fusee.Math.Core.Vector3D /* Vector_cstype_out */ center {
    /* <Vector_csvarin> */
    set 
	{
      C4dApiPINVOKE.HandleInfo_center_set(swigCPtr, value /* Vector_csin */);
    }  /* </Vector_csvarin> */   
   /* <Vector_csvarout> */
   get
   {  
      Fusee.Math.Core.Vector3D ret = C4dApiPINVOKE.HandleInfo_center_get(swigCPtr);
      return ret;
   } /* <Vector_csvarout> */ 
  }

  public double radius {
    set {
      C4dApiPINVOKE.HandleInfo_radius_set(swigCPtr, value);
    } 
    get {
      double ret = C4dApiPINVOKE.HandleInfo_radius_get(swigCPtr);
      return ret;
    } 
  }

  public HANDLECONSTRAINTTYPE type {
    set {
      C4dApiPINVOKE.HandleInfo_type_set(swigCPtr, (int)value);
    } 
    get {
      HANDLECONSTRAINTTYPE ret = (HANDLECONSTRAINTTYPE)C4dApiPINVOKE.HandleInfo_type_get(swigCPtr);
      return ret;
    } 
  }

  public Fusee.Math.Core.Vector3D /* Vector_cstype_out */ CalculateNewPosition(BaseDraw bd, ref Fusee.Math.Core.Matrix4D /* constMatrix&_cstype */ mg, Fusee.Math.Core.Vector3D /* constVector&_cstype */ mouse_pos) {
    double[] adbl_mg;
    unsafe {adbl_mg = Fusee.Math.ArrayConversion.Convert.Matrix4DToArrayDoubleC4DLayout(mg);    fixed (double *pdbl_mg = adbl_mg) {
    /* constMatrix&_csin_pre */
    try  {  /* <Vector_csout> */
        Fusee.Math.Core.Vector3D ret = C4dApiPINVOKE.HandleInfo_CalculateNewPosition(swigCPtr, BaseDraw.getCPtr(bd), (IntPtr) pdbl_mg /* constMatrix&_csin */, ref mouse_pos /* constVector&_csin */);
        return ret;
     } /* <Vector_csout> */  finally {
        // NOP mg = Fusee.Math.ArrayConversion.Convert.ArrayDoubleC4DLayoutToMatrix4D(pdbl_mg);
        /* constMatrix&_csin_post */
    }
} } /* constMatrix&_csin_terminator */
  }

}

}
